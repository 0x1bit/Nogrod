// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	protos/api.proto

It has these top-level messages:
	Void
	MinerRequest
	MinerInfo
	PoolStatsInfo
	BlockInfo
	PoolConfigInfo
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Void struct {
}

func (m *Void) Reset()                    { *m = Void{} }
func (m *Void) String() string            { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()               {}
func (*Void) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MinerRequest struct {
	ID uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *MinerRequest) Reset()                    { *m = MinerRequest{} }
func (m *MinerRequest) String() string            { return proto.CompactTextString(m) }
func (*MinerRequest) ProtoMessage()               {}
func (*MinerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MinerRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type MinerInfo struct {
	Address               string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Name                  string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pending               int64   `protobuf:"varint,3,opt,name=pending" json:"pending,omitempty"`
	HistoricalShare       float64 `protobuf:"fixed64,4,opt,name=historicalShare" json:"historicalShare,omitempty"`
	EffectiveCapacity     float64 `protobuf:"fixed64,5,opt,name=effectiveCapacity" json:"effectiveCapacity,omitempty"`
	Deadline              uint64  `protobuf:"varint,6,opt,name=deadline" json:"deadline,omitempty"`
	LastActiveBlockHeight uint64  `protobuf:"varint,7,opt,name=lastActiveBlockHeight" json:"lastActiveBlockHeight,omitempty"`
	NConf                 int32   `protobuf:"varint,8,opt,name=nConf" json:"nConf,omitempty"`
	PayoutDetail          string  `protobuf:"bytes,9,opt,name=payoutDetail" json:"payoutDetail,omitempty"`
}

func (m *MinerInfo) Reset()                    { *m = MinerInfo{} }
func (m *MinerInfo) String() string            { return proto.CompactTextString(m) }
func (*MinerInfo) ProtoMessage()               {}
func (*MinerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MinerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MinerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MinerInfo) GetPending() int64 {
	if m != nil {
		return m.Pending
	}
	return 0
}

func (m *MinerInfo) GetHistoricalShare() float64 {
	if m != nil {
		return m.HistoricalShare
	}
	return 0
}

func (m *MinerInfo) GetEffectiveCapacity() float64 {
	if m != nil {
		return m.EffectiveCapacity
	}
	return 0
}

func (m *MinerInfo) GetDeadline() uint64 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *MinerInfo) GetLastActiveBlockHeight() uint64 {
	if m != nil {
		return m.LastActiveBlockHeight
	}
	return 0
}

func (m *MinerInfo) GetNConf() int32 {
	if m != nil {
		return m.NConf
	}
	return 0
}

func (m *MinerInfo) GetPayoutDetail() string {
	if m != nil {
		return m.PayoutDetail
	}
	return ""
}

type PoolStatsInfo struct {
	MinerCount            int32   `protobuf:"varint,1,opt,name=minerCount" json:"minerCount,omitempty"`
	EffectivePoolCapacity float64 `protobuf:"fixed64,2,opt,name=effectivePoolCapacity" json:"effectivePoolCapacity,omitempty"`
	NetDiff               float64 `protobuf:"fixed64,3,opt,name=netDiff" json:"netDiff,omitempty"`
}

func (m *PoolStatsInfo) Reset()                    { *m = PoolStatsInfo{} }
func (m *PoolStatsInfo) String() string            { return proto.CompactTextString(m) }
func (*PoolStatsInfo) ProtoMessage()               {}
func (*PoolStatsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PoolStatsInfo) GetMinerCount() int32 {
	if m != nil {
		return m.MinerCount
	}
	return 0
}

func (m *PoolStatsInfo) GetEffectivePoolCapacity() float64 {
	if m != nil {
		return m.EffectivePoolCapacity
	}
	return 0
}

func (m *PoolStatsInfo) GetNetDiff() float64 {
	if m != nil {
		return m.NetDiff
	}
	return 0
}

type BlockInfo struct {
	Height              uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	BaseTarget          uint64 `protobuf:"varint,2,opt,name=baseTarget" json:"baseTarget,omitempty"`
	Scoop               uint32 `protobuf:"varint,3,opt,name=scoop" json:"scoop,omitempty"`
	GenerationSignature string `protobuf:"bytes,4,opt,name=generationSignature" json:"generationSignature,omitempty"`
	MinerID             uint64 `protobuf:"varint,5,opt,name=minerID" json:"minerID,string,omitempty"`
	Miner               string `protobuf:"bytes,6,opt,name=miner" json:"miner,omitempty"`
	Deadline            uint64 `protobuf:"varint,7,opt,name=deadline" json:"deadline,omitempty"`
	Created             string `protobuf:"bytes,8,opt,name=created" json:"created,omitempty"`
}

func (m *BlockInfo) Reset()                    { *m = BlockInfo{} }
func (m *BlockInfo) String() string            { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()               {}
func (*BlockInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BlockInfo) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfo) GetBaseTarget() uint64 {
	if m != nil {
		return m.BaseTarget
	}
	return 0
}

func (m *BlockInfo) GetScoop() uint32 {
	if m != nil {
		return m.Scoop
	}
	return 0
}

func (m *BlockInfo) GetGenerationSignature() string {
	if m != nil {
		return m.GenerationSignature
	}
	return ""
}

func (m *BlockInfo) GetMinerID() uint64 {
	if m != nil {
		return m.MinerID
	}
	return 0
}

func (m *BlockInfo) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *BlockInfo) GetDeadline() uint64 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *BlockInfo) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

type PoolConfigInfo struct {
	PoolFeeShare    float64 `protobuf:"fixed64,1,opt,name=poolFeeShare" json:"poolFeeShare,omitempty"`
	DeadlineLimit   uint64  `protobuf:"varint,2,opt,name=deadlineLimit" json:"deadlineLimit,omitempty"`
	MinimumPayout   int64   `protobuf:"varint,3,opt,name=MinimumPayout" json:"MinimumPayout,omitempty"`
	TxFee           int64   `protobuf:"varint,4,opt,name=TxFee" json:"TxFee,omitempty"`
	WinnerShare     float64 `protobuf:"fixed64,5,opt,name=WinnerShare" json:"WinnerShare,omitempty"`
	TMin            int32   `protobuf:"varint,6,opt,name=TMin" json:"TMin,omitempty"`
	NAVG            int32   `protobuf:"varint,7,opt,name=NAVG" json:"NAVG,omitempty"`
	NMin            int32   `protobuf:"varint,8,opt,name=NMin" json:"NMin,omitempty"`
	SetNowFee       int64   `protobuf:"varint,9,opt,name=SetNowFee" json:"SetNowFee,omitempty"`
	SetWeeklyFee    int64   `protobuf:"varint,10,opt,name=SetWeeklyFee" json:"SetWeeklyFee,omitempty"`
	SetDailyFee     int64   `protobuf:"varint,11,opt,name=SetDailyFee" json:"SetDailyFee,omitempty"`
	SetMinPayoutFee int64   `protobuf:"varint,12,opt,name=SetMinPayoutFee" json:"SetMinPayoutFee,omitempty"`
	Version         string  `protobuf:"bytes,13,opt,name=Version" json:"Version,omitempty"`
	PoolPublicID    uint64  `protobuf:"varint,14,opt,name=PoolPublicID" json:"PoolPublicID,omitempty"`
}

func (m *PoolConfigInfo) Reset()                    { *m = PoolConfigInfo{} }
func (m *PoolConfigInfo) String() string            { return proto.CompactTextString(m) }
func (*PoolConfigInfo) ProtoMessage()               {}
func (*PoolConfigInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PoolConfigInfo) GetPoolFeeShare() float64 {
	if m != nil {
		return m.PoolFeeShare
	}
	return 0
}

func (m *PoolConfigInfo) GetDeadlineLimit() uint64 {
	if m != nil {
		return m.DeadlineLimit
	}
	return 0
}

func (m *PoolConfigInfo) GetMinimumPayout() int64 {
	if m != nil {
		return m.MinimumPayout
	}
	return 0
}

func (m *PoolConfigInfo) GetTxFee() int64 {
	if m != nil {
		return m.TxFee
	}
	return 0
}

func (m *PoolConfigInfo) GetWinnerShare() float64 {
	if m != nil {
		return m.WinnerShare
	}
	return 0
}

func (m *PoolConfigInfo) GetTMin() int32 {
	if m != nil {
		return m.TMin
	}
	return 0
}

func (m *PoolConfigInfo) GetNAVG() int32 {
	if m != nil {
		return m.NAVG
	}
	return 0
}

func (m *PoolConfigInfo) GetNMin() int32 {
	if m != nil {
		return m.NMin
	}
	return 0
}

func (m *PoolConfigInfo) GetSetNowFee() int64 {
	if m != nil {
		return m.SetNowFee
	}
	return 0
}

func (m *PoolConfigInfo) GetSetWeeklyFee() int64 {
	if m != nil {
		return m.SetWeeklyFee
	}
	return 0
}

func (m *PoolConfigInfo) GetSetDailyFee() int64 {
	if m != nil {
		return m.SetDailyFee
	}
	return 0
}

func (m *PoolConfigInfo) GetSetMinPayoutFee() int64 {
	if m != nil {
		return m.SetMinPayoutFee
	}
	return 0
}

func (m *PoolConfigInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PoolConfigInfo) GetPoolPublicID() uint64 {
	if m != nil {
		return m.PoolPublicID
	}
	return 0
}

func init() {
	proto.RegisterType((*Void)(nil), "api.Void")
	proto.RegisterType((*MinerRequest)(nil), "api.MinerRequest")
	proto.RegisterType((*MinerInfo)(nil), "api.MinerInfo")
	proto.RegisterType((*PoolStatsInfo)(nil), "api.PoolStatsInfo")
	proto.RegisterType((*BlockInfo)(nil), "api.BlockInfo")
	proto.RegisterType((*PoolConfigInfo)(nil), "api.PoolConfigInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Api service

type ApiClient interface {
	GetMinerInfo(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerInfo, error)
	GetPoolStatsInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PoolStatsInfo, error)
	GetBlockInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*BlockInfo, error)
	GetPoolConfigInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PoolConfigInfo, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) GetMinerInfo(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerInfo, error) {
	out := new(MinerInfo)
	err := grpc.Invoke(ctx, "/api.Api/GetMinerInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetPoolStatsInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PoolStatsInfo, error) {
	out := new(PoolStatsInfo)
	err := grpc.Invoke(ctx, "/api.Api/GetPoolStatsInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetBlockInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*BlockInfo, error) {
	out := new(BlockInfo)
	err := grpc.Invoke(ctx, "/api.Api/GetBlockInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetPoolConfigInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*PoolConfigInfo, error) {
	out := new(PoolConfigInfo)
	err := grpc.Invoke(ctx, "/api.Api/GetPoolConfigInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Api service

type ApiServer interface {
	GetMinerInfo(context.Context, *MinerRequest) (*MinerInfo, error)
	GetPoolStatsInfo(context.Context, *Void) (*PoolStatsInfo, error)
	GetBlockInfo(context.Context, *Void) (*BlockInfo, error)
	GetPoolConfigInfo(context.Context, *Void) (*PoolConfigInfo, error)
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_GetMinerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetMinerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Api/GetMinerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetMinerInfo(ctx, req.(*MinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetPoolStatsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetPoolStatsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Api/GetPoolStatsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetPoolStatsInfo(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Api/GetBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetBlockInfo(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetPoolConfigInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetPoolConfigInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Api/GetPoolConfigInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetPoolConfigInfo(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMinerInfo",
			Handler:    _Api_GetMinerInfo_Handler,
		},
		{
			MethodName: "GetPoolStatsInfo",
			Handler:    _Api_GetPoolStatsInfo_Handler,
		},
		{
			MethodName: "GetBlockInfo",
			Handler:    _Api_GetBlockInfo_Handler,
		},
		{
			MethodName: "GetPoolConfigInfo",
			Handler:    _Api_GetPoolConfigInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/api.proto",
}

func init() { proto.RegisterFile("protos/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 694 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0xcd, 0xe6, 0xb7, 0x3b, 0x4d, 0xf2, 0xb5, 0xee, 0x07, 0x5a, 0x55, 0xa8, 0x8a, 0x56, 0x5c,
	0x44, 0x02, 0x15, 0x44, 0xe1, 0x01, 0x4a, 0xa3, 0x96, 0x48, 0xa4, 0xaa, 0x9c, 0xaa, 0xbd, 0x76,
	0x93, 0x49, 0x62, 0x75, 0x63, 0x2f, 0xbb, 0x0e, 0xd0, 0x2b, 0x1e, 0x8b, 0x5b, 0xde, 0x81, 0x27,
	0xe1, 0x0d, 0xd0, 0xcc, 0x66, 0x93, 0xdd, 0xd2, 0x3b, 0xcf, 0x99, 0x63, 0xcf, 0xcc, 0x39, 0xb6,
	0x61, 0x2f, 0x4e, 0xac, 0xb3, 0xe9, 0x1b, 0x15, 0xeb, 0x63, 0x5e, 0x8a, 0x9a, 0x8a, 0x75, 0xd8,
	0x84, 0xfa, 0x8d, 0xd5, 0xd3, 0xf0, 0x08, 0xda, 0x23, 0x6d, 0x30, 0x91, 0xf8, 0x65, 0x85, 0xa9,
	0x13, 0x5d, 0xa8, 0x0e, 0x07, 0x81, 0xd7, 0xf3, 0xfa, 0x75, 0x59, 0x1d, 0x0e, 0xc2, 0x9f, 0x55,
	0xf0, 0x99, 0x30, 0x34, 0x33, 0x2b, 0x02, 0x68, 0xa9, 0xe9, 0x34, 0xc1, 0x34, 0x65, 0x8a, 0x2f,
	0xf3, 0x50, 0x08, 0xa8, 0x1b, 0xb5, 0xc4, 0xa0, 0xca, 0x30, 0xaf, 0x89, 0x1d, 0xa3, 0x99, 0x6a,
	0x33, 0x0f, 0x6a, 0x3d, 0xaf, 0x5f, 0x93, 0x79, 0x28, 0xfa, 0xf0, 0xdf, 0x42, 0xa7, 0xce, 0x26,
	0x7a, 0xa2, 0xa2, 0xf1, 0x42, 0x25, 0x18, 0xd4, 0x7b, 0x5e, 0xdf, 0x93, 0x8f, 0x61, 0xf1, 0x1a,
	0xf6, 0x71, 0x36, 0xc3, 0x89, 0xd3, 0x5f, 0xf1, 0x4c, 0xc5, 0x6a, 0xa2, 0xdd, 0x43, 0xd0, 0x60,
	0xee, 0xbf, 0x09, 0x71, 0x08, 0x3b, 0x53, 0x54, 0xd3, 0x48, 0x1b, 0x0c, 0x9a, 0x3c, 0xc3, 0x26,
	0x16, 0xef, 0xe1, 0x59, 0xa4, 0x52, 0x77, 0xca, 0x3b, 0x3e, 0x46, 0x76, 0x72, 0xff, 0x09, 0xf5,
	0x7c, 0xe1, 0x82, 0x16, 0x13, 0x9f, 0x4e, 0x8a, 0xff, 0xa1, 0x61, 0xce, 0xac, 0x99, 0x05, 0x3b,
	0x3d, 0xaf, 0xdf, 0x90, 0x59, 0x20, 0x42, 0x68, 0xc7, 0xea, 0xc1, 0xae, 0xdc, 0x00, 0x9d, 0xd2,
	0x51, 0xe0, 0xf3, 0xd4, 0x25, 0x2c, 0xfc, 0x01, 0x9d, 0x2b, 0x6b, 0xa3, 0xb1, 0x53, 0x2e, 0x65,
	0xf1, 0x8e, 0x00, 0x96, 0xa4, 0xe4, 0x99, 0x5d, 0x19, 0xc7, 0xfa, 0x35, 0x64, 0x01, 0xa1, 0x06,
	0x37, 0x13, 0xd1, 0xce, 0xcd, 0xb8, 0x55, 0x1e, 0xf7, 0xe9, 0x24, 0x89, 0x6c, 0xd0, 0x0d, 0xf4,
	0x6c, 0xc6, 0x22, 0x7b, 0x32, 0x0f, 0xc3, 0x3f, 0x1e, 0xf8, 0x3c, 0x0a, 0x57, 0x7f, 0x0e, 0xcd,
	0x45, 0x36, 0x6f, 0x66, 0xee, 0x3a, 0xa2, 0xae, 0xee, 0x54, 0x8a, 0xd7, 0x2a, 0x99, 0xa3, 0xe3,
	0x52, 0x75, 0x59, 0x40, 0x48, 0x80, 0x74, 0x62, 0x6d, 0xcc, 0xa7, 0x77, 0x64, 0x16, 0x88, 0xb7,
	0x70, 0x30, 0x47, 0x83, 0x89, 0x72, 0xda, 0x9a, 0xb1, 0x9e, 0x1b, 0xe5, 0x56, 0x6b, 0x13, 0x7d,
	0xf9, 0x54, 0x8a, 0xfa, 0xe4, 0x59, 0x87, 0x03, 0xb6, 0xaf, 0x2e, 0xf3, 0x90, 0x2a, 0xf0, 0x92,
	0x1d, 0xf3, 0x65, 0x16, 0x94, 0xac, 0x6c, 0x3d, 0xb2, 0x32, 0x80, 0xd6, 0x24, 0x41, 0xe5, 0x70,
	0xca, 0xb6, 0xf8, 0x32, 0x0f, 0xc3, 0x5f, 0x35, 0xe8, 0xb2, 0x3c, 0xd6, 0xcc, 0xf4, 0x9c, 0x07,
	0x27, 0xaf, 0xac, 0x8d, 0xce, 0x11, 0xb3, 0x8b, 0xe6, 0xb1, 0x4a, 0x25, 0x4c, 0xbc, 0x84, 0x4e,
	0x7e, 0xf8, 0x67, 0xbd, 0xd4, 0xb9, 0x0e, 0x65, 0x90, 0x58, 0x23, 0x6d, 0xf4, 0x72, 0xb5, 0xbc,
	0x62, 0xa3, 0xd7, 0xb7, 0xba, 0x0c, 0xd2, 0x38, 0xd7, 0xdf, 0xcf, 0x31, 0x13, 0xa3, 0x26, 0xb3,
	0x40, 0xf4, 0x60, 0xf7, 0x56, 0x1b, 0x83, 0x49, 0xd6, 0x44, 0x76, 0x83, 0x8b, 0x10, 0xbd, 0xa0,
	0xeb, 0x91, 0x36, 0xac, 0x42, 0x43, 0xf2, 0x9a, 0xb0, 0xcb, 0xd3, 0x9b, 0x0b, 0x16, 0xa0, 0x21,
	0x79, 0xcd, 0x18, 0xf1, 0x76, 0xd6, 0x18, 0xf1, 0x5e, 0x80, 0x3f, 0x46, 0x77, 0x69, 0xbf, 0x51,
	0x5d, 0x9f, 0xeb, 0x6e, 0x01, 0x52, 0x60, 0x8c, 0xee, 0x16, 0xf1, 0x3e, 0x7a, 0x20, 0x02, 0x30,
	0xa1, 0x84, 0x51, 0x7f, 0x63, 0x74, 0x03, 0xa5, 0x33, 0xca, 0x2e, 0x53, 0x8a, 0x10, 0xbd, 0xd9,
	0x31, 0xba, 0x91, 0x36, 0xd9, 0x9c, 0xc4, 0x6a, 0x33, 0xeb, 0x31, 0x4c, 0xf6, 0xdc, 0x60, 0x92,
	0x6a, 0x6b, 0x82, 0x4e, 0x66, 0xcf, 0x3a, 0xa4, 0x4e, 0xc8, 0x9d, 0xab, 0xd5, 0x5d, 0xa4, 0x27,
	0xc3, 0x41, 0xd0, 0x65, 0x99, 0x4b, 0xd8, 0xbb, 0xdf, 0x1e, 0xd4, 0x4e, 0x63, 0x2d, 0x4e, 0xa0,
	0x7d, 0xc1, 0x07, 0xaf, 0xff, 0x9e, 0xfd, 0x63, 0xfa, 0xc2, 0x8a, 0x9f, 0xd5, 0x61, 0x77, 0x0b,
	0x11, 0x25, 0xac, 0x88, 0x13, 0xd8, 0xbb, 0x40, 0x57, 0x7e, 0x77, 0x3e, 0xb3, 0xe8, 0xb7, 0x3b,
	0x14, 0xbc, 0x2c, 0xa5, 0xc3, 0x8a, 0x78, 0xc5, 0x95, 0xb6, 0x4f, 0xa5, 0xb0, 0x21, 0xab, 0xb0,
	0x49, 0x85, 0x15, 0xf1, 0x01, 0xf6, 0xd7, 0x15, 0x0a, 0x77, 0xac, 0xb0, 0xe3, 0x60, 0x53, 0x62,
	0x9b, 0x0f, 0x2b, 0x77, 0x4d, 0xfe, 0x7b, 0x4f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x4c,
	0x97, 0x0a, 0x8f, 0x05, 0x00, 0x00,
}
